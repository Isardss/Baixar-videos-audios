from pytubefix import YouTube
from pytubefix.cli import on_progress
from pathlib import Path

# === Inserir o link manualmente ===
url = input("Cole aqui o link do v√≠deo do YouTube: ").strip()

# Pasta de destino
destino = Path("pasta_video")
destino.mkdir(exist_ok=True)

# Criar objeto YouTube
yt = YouTube(url, on_progress_callback=on_progress)
print(f"\nüé¨ T√≠tulo: {yt.title}\n‚è±Ô∏è Dura√ß√£o: {yt.length}s")

# ==== MENU PRINCIPAL ====
print("\nO que deseja baixar?")
print("1 - V√≠deo com √°udio (MP4 progressivo)")
print("2 - Somente v√≠deo (sem √°udio)")
print("3 - Somente √°udio")

opcao_principal = int(input("\nEscolha a op√ß√£o desejada: "))

# ==== OP√á√ÉO 1: V√≠deo com √°udio ====
if opcao_principal == 1:
    streams = yt.streams.filter(progressive=True, file_extension="mp4").order_by("resolution").desc()
    print("\nQualidades dispon√≠veis (v√≠deo + √°udio):")
    for i, stream in enumerate(streams, start=1):
        print(f"{i}: {stream.resolution} - {round(stream.filesize / 1024 / 1024, 2)} MB")
    escolha = int(input("\nEscolha a qualidade: "))
    escolhido = streams[escolha - 1]
    print(f"\n‚¨áÔ∏è Baixando {escolhido.resolution}...")
    escolhido.download(output_path=destino)

# ==== OP√á√ÉO 2: Somente v√≠deo ====
elif opcao_principal == 2:
    streams = yt.streams.filter(only_video=True, file_extension="mp4").order_by("resolution").desc()
    print("\nQualidades dispon√≠veis (apenas v√≠deo, sem √°udio):")
    for i, stream in enumerate(streams, start=1):
        print(f"{i}: {stream.resolution} - {stream.mime_type} - {round(stream.filesize / 1024 / 1024, 2)} MB")
    escolha = int(input("\nEscolha a qualidade: "))
    escolhido = streams[escolha - 1]
    print(f"\n‚¨áÔ∏è Baixando {escolhido.resolution} (v√≠deo sem √°udio)...")
    escolhido.download(output_path=destino)

# ==== OP√á√ÉO 3: Somente √°udio ====
elif opcao_principal == 3:
    streams = yt.streams.filter(only_audio=True).order_by("abr").desc()
    print("\nQualidades dispon√≠veis (√°udio):")
    for i, stream in enumerate(streams, start=1):
        print(f"{i}: {stream.abr} - {stream.mime_type} - {round(stream.filesize / 1024 / 1024, 2)} MB")
    escolha = int(input("\nEscolha a qualidade: "))
    escolhido = streams[escolha - 1]
    print(f"\n‚¨áÔ∏è Baixando √°udio {escolhido.abr}...")
    escolhido.download(output_path=destino, filename=f"{yt.title}.mp3")

else:
    print("‚ùå Op√ß√£o inv√°lida!")

print(f"\n‚úÖ Download conclu√≠do! Arquivo salvo em: {destino}")
